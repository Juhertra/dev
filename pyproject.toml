[tool.poetry]
name = "secflow"
version = "0.0.1"
description = "SecFlow security testing platform"
authors = ["SecFlow Team"]
readme = "README.md"
packages = [{ include = "secflow" }]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.7"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
pytest-cov = "^5.0"
coverage = {extras = ["toml"], version = "^7.0"}
ruff = "^0.5.0"
pyright = "^1.1.377"
import-linter = "^2.0"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
source = ["secflow"]
omit = [
    "*/migrations/*",
    "*/e2e/*",
    "*/examples/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
